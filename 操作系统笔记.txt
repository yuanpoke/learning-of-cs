操作系统 operating system（os）

10/21

什么是操作系统？
  对上，操作系统是一个控制软件，管理应用程序
  对下，进行硬件资源管理

  “把CPU抽象成进程，磁盘抽象成文件，内存抽象成地址空间”，
  从而供用户更好更便捷地使用
  
  层次结构：硬件之上，应用软件之下，用户之下
  操作系统是系统软件

  （有两种接口，shell和kernel。shell包括gui和命令行程序
    Linux, Windows, Android的界面属于外壳shell，
    内核kernel是本课学习重点）

计算机系统的层次结构：
     硬件
     操作系统
应用程序 用户（直接接触操作系统）
     用户

1.系统资源的管理者：处理机管理，存储器管理，文件管理，
                    设备管理
2.用户和计算机硬件之间的接口（用户接口）：
    命令接口：允许用户直接使用
      联机命令接口（交互式命令接口）：用户说一句，系统做一句
      脱机命令接口（批处理命令接口）：用户说一堆，系统做一堆
    程序接口：允许用户通过程序间接使用
      由一组系统调用组成，程序接口=系统调用=广义指令，如在程
      序中调用dll
    GUI：图形用户界面
3.对硬件资源的扩展：覆盖了软件的机器称为扩充机器，又称为虚拟机。

现在很多CPU都是多核的

操作系统的四大特征：
  并发和共享是最基本的特征，互为存在条件的。
  如果没有并发和共享就谈不上虚拟和异步。
  1. 并发
       并发和并行：并发是一段时间多个程序，并行是同一
                   时刻多个程序。      
  2. 共享：资源可供内存中多个并发执行的进程共同使用
        互斥共享：一个时间段只能一个进程访问资源
        同时共享：一个时间段可以有多个进程访问资源
  3. 虚拟
       一台物理机器虚拟成多台虚拟机器
       空分复用技术：如虚拟存储器技术
       时分复用技术：如虚拟处理器
  4. 异步
       走走停停，不知道向前推进的速度。
       但只要运行环境相同，os要保证程序的运行结果（
       如1+1=2这个结果是不能变的）相同。
      
操作系统实例：
  1.UNIX BSD
      UNIX -> BSD
  2.LINUX(在其学生时代写的)
      -> redhat, ubuntu
  3.Windows
  4.ios  macos
  5.Android

  计算机桌面Windows大多，服务器、终端Linux大多




汇编语言是基于具体的硬件的，很难移植
CS：段寄存器

操作系统结构：
  1.简单操作系统：MS-DOS
      不分模块的单体内核
  2.微内核 只把必要的放在内核中
      但是需要多次进行移除和移进，效率降低
  
操作系统的启动：
  DISK：存放操作系统，bootloader
  BIOS: 基本I/O处理系统，上电后检测外设，加载软件，把
        bootloader加载到内存中
  bootloader：加载os
  
  POST（加电自检），寻找显卡和执行BIOS

系统调用：
  来源于应用程序，应用程序主动向操作系统发出服务请求。
异常：
  来源于不良的应用程序，非法指令或者其他坏的处理状态。
中断：
  来源于外设，来自不同的硬件设备的计时器和网络的中断。

1. 源头不同：
   中断：外设
   异常：应用程序
   系统调用：应用程序

2. 处理时间：
   中断：异步，不知道什么时候会产生
   异常：同步，执行到某处一定会产生
   系统调用：同步或异步（返回可能异步）

3. 响应
    中断：持续，对用户应用程序是透明的
    异常：杀死或者重新执行意想不到的应用程序指令
    系统调用：等待服务完成和持续




进程
  
程序：指令序列

程序段、数据段、PCB组成进程实体（进程映像），进程实体
简称为进程。创建进程，实质上就是创建进程实体中的PCB，
撤销进程实质上就是撤销进程实体中的PCB。

PCB是进程存在的唯一标准。

进程定义：
  定义均强调了动态性，动态性是进程最基本的特征
  1. 进程是程序的一次执行过程。
  2. 进程是一个程序及其数据在处理机上顺序执行时所
     发生的活动。
  3. 进程是具有独立功能的程序在数据集合上运行的过程，
     是系统进行资源分配和调度的一个独立单位。  
  4. 进程是进程实体的运行过程，是系统进行资源分配和调度
     的一个独立单位。

  任务管理器中各个进程。

  严格来说，两者不一样，进程实体是静态的，进程是动态的。
  但是一般认为两者一样，可以说进程由程序段、数据段、PCB
  三部分组成。

PCB的组成：进程的管理者（os）所需的数据都在PCB中，而程序
           本身的允许所需数据在程序段和数据段中
  1. 进程描述信息
       进程标识符PID：操作系统分配的唯一的不重复的ID
       用户标识符UID
  2. 进程控制和管理信息
       进程当前状态
       进程优先级
  3. 资源分配清单
       程序段指针
       数据段指针
       键盘
       鼠标
  4. 处理机相关信息
       各种寄存器值：进程会切换故需要保存在PCB中

进程的组织方式：多个进程之间的组织方式
  1. 链接方式：
       按照进程状态将PCB分为多个队列，os持有指向
       各个队列的指针。队列之间用指针连接。
         执行指针：指向运行态的进程
         就绪队列指针：指向就绪态的进程
         阻塞队列指针：指向阻塞态的进程
       
  2. 索引方式：
       按照进程状态的不同，建立几张索引表，os持有
       指向各个索引表的指针。
         执行指针
         就绪表指针
         阻塞表指针

进程的特征：
  1. 动态性：进程是程序的一次执行
  2. 并发性：
  3. 独立性：独立运行、获得资源、接受调度
             进程是资源分配、接受调度的基本单位。
  4. 异步性：
  5. 结构性：每个进程都有一个PCB，由程序段、数据段和
             PCB组成

进程的状态：
  三种基本状态：
    1. 运行态：占有CPU
         双核环境可以有两个进程在运行态
    2. 就绪态：拥有除CPU外所有资源
    3. 阻塞态（等待态）：缺少某一资源和CPU
  另外两种状态：
    1. 创建态：进程正在被创建，os为其分配资源，初始化PCB
    2. 结束态（终止态）：进程正在撤销，os回收资源，撤销PCB

进程状态的转换：
  就绪态->运行态：进程被调度
  运行态->就绪态：时间片到，或CPU被高优先级进程抢占
  运行态->阻塞态：等待资源分配或某时间发生     
  阻塞态->就绪态：资源分配到位或等待的事件发生

  运行态到阻塞态是进程自身做出的主动行为
  阻塞态到就绪态不是进程自身控制的，是被动的

  不能由阻塞态直接到运行态，也不能由就绪态直接到阻塞态。

进程控制：
  进程控制就是实现进程状态的转换

  

10/22















